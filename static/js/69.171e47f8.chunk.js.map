{"version":3,"file":"static/js/69.171e47f8.chunk.js","mappings":"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","sources":["atoms/productState.tsx","utils/ConfirmMessage.tsx","pages/product.page.tsx"],"sourcesContent":["import { atom } from \"recoil\";\r\nimport { ProductModel } from \"../models/product.model\";\r\n\r\nexport const productState = atom<ProductModel[]>({\r\n  key: \"productState\",\r\n  default: [],\r\n});\r\n","import { Modal, ModalFuncProps } from \"antd\";\r\nimport { ReactNode } from \"react\";\r\nexport default async function ConfirmMessage(\r\n  title: string | ReactNode,\r\n  content: string | ReactNode\r\n) {\r\n  return new Promise((resolve) => {\r\n    const config: ModalFuncProps = {\r\n      title: title,\r\n      content: content,\r\n      okButtonProps: { className: \"bg-purple-500\" },\r\n      onOk: () => {\r\n        resolve(true);\r\n      },\r\n      onCancel: () => {\r\n        resolve(false);\r\n      },\r\n    };\r\n    Modal.confirm(config);\r\n  });\r\n}\r\n","import { Button, Col, Image, Row, Table, Typography } from \"antd\";\r\nimport React, { lazy, useState } from \"react\";\r\nimport {\r\n  DeleteOutlined,\r\n  HighlightOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { ACTION } from \"../components/maintenance-product.component\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { productState } from \"../atoms/productState\";\r\nimport ConfirmMessage from \"../utils/ConfirmMessage\";\r\n\r\nconst ProductPage: React.FC = () => {\r\n  const [data, setData] = useRecoilState(productState);\r\n  const [maintenance, setMaintenance] = useState<{\r\n    show: boolean;\r\n    action: ACTION;\r\n    id?: string;\r\n  }>({ show: false, action: \"\" });\r\n  async function onClikHandle(action: ACTION, id?: string) {\r\n    if (action === \"NEW\") {\r\n      setMaintenance((old) => ({\r\n        ...old,\r\n        id: undefined,\r\n        action: \"NEW\",\r\n        show: true,\r\n      }));\r\n    } else if (action === \"UPDATE\") {\r\n      setMaintenance((old) => ({\r\n        ...old,\r\n        id: id,\r\n        action: \"UPDATE\",\r\n        show: true,\r\n      }));\r\n    } else if (action === \"DELETE\") {\r\n      const confirm = await ConfirmMessage(\r\n        \"Konfirmasi\",\r\n        \"Anda ingin menghapus data?\"\r\n      );\r\n      if (confirm) {\r\n        setData((old) => {\r\n          const value = [...old.filter((p) => p.id !== id)];\r\n          return value;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  function onCloseMaintenance() {\r\n    setMaintenance({ show: false, action: \"\", id: undefined });\r\n  }\r\n  return (\r\n    <div className=\"w-9/12\">\r\n      <Row gutter={[8, 8]} justify={\"start\"}>\r\n        <Col span={24}>\r\n          <Button\r\n            icon={<PlusOutlined />}\r\n            type=\"primary\"\r\n            className=\"bg-purple-500\"\r\n            onClick={() => {\r\n              onClikHandle(\"NEW\");\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={24}>\r\n          <Table\r\n            rowKey={\"id\"}\r\n            columns={[\r\n              {\r\n                title: \"Nama Barang\",\r\n                dataIndex: \"namaBarang\",\r\n                key: \"namaBarang\",\r\n              },\r\n              {\r\n                title: \"Harga Beli\",\r\n                dataIndex: \"hargaBeli\",\r\n                key: \"hargaBeli\",\r\n                render(value, record, index) {\r\n                  return (\r\n                    <Typography>\r\n                      Rp.{\" \"}\r\n                      {Number(value).toLocaleString(\"id-ID\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}\r\n                    </Typography>\r\n                  );\r\n                },\r\n              },\r\n              {\r\n                title: \"Harga Jual\",\r\n                dataIndex: \"hargaJual\",\r\n                key: \"hargaJual\",\r\n                render(value, record, index) {\r\n                  return (\r\n                    <Typography>\r\n                      Rp.{\" \"}\r\n                      {Number(value).toLocaleString(\"id-ID\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}\r\n                    </Typography>\r\n                  );\r\n                },\r\n              },\r\n              {\r\n                title: \"Stock\",\r\n                dataIndex: \"stock\",\r\n                key: \"stock\",\r\n                render(value, record, index) {\r\n                  return (\r\n                    <Typography>\r\n                      {Number(value).toLocaleString(\"id-ID\")}\r\n                    </Typography>\r\n                  );\r\n                },\r\n              },\r\n              {\r\n                title: \"Image\",\r\n                dataIndex: \"image\",\r\n                key: \"image\",\r\n                render(value, record, index) {\r\n                  return (\r\n                    <div className=\"w-full flex items-center justify-center\">\r\n                      <Image\r\n                        src={value}\r\n                        alt={String(index)}\r\n                        height={50}\r\n                        width={50}\r\n                      />\r\n                    </div>\r\n                  );\r\n                },\r\n              },\r\n              {\r\n                title: \"Action\",\r\n                dataIndex: \"\",\r\n                key: \"\",\r\n                render(value, record, index) {\r\n                  return (\r\n                    <Row gutter={8} justify={\"center\"}>\r\n                      <Col span={8}>\r\n                        <Button\r\n                          block\r\n                          onClick={() => {\r\n                            onClikHandle(\"UPDATE\", record.id);\r\n                          }}\r\n                          type=\"primary\"\r\n                          className=\"bg-teal-600\"\r\n                          icon={<HighlightOutlined />}\r\n                        />\r\n                      </Col>\r\n                      <Col span={8}>\r\n                        <Button\r\n                          block\r\n                          type=\"primary\"\r\n                          danger\r\n                          onClick={() => {\r\n                            onClikHandle(\"DELETE\", record.id);\r\n                          }}\r\n                          icon={<DeleteOutlined />}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                },\r\n              },\r\n            ]}\r\n            dataSource={data}\r\n            scroll={{\r\n              x: 500,\r\n              y: 500,\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <MaintenanceProduct\r\n        open={maintenance.show}\r\n        action={maintenance.action}\r\n        id={maintenance.id}\r\n        onCancel={onCloseMaintenance}\r\n        width={900}\r\n        exit={onCloseMaintenance}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst MaintenanceProduct = lazy(\r\n  () => import(\"../components/maintenance-product.component\")\r\n);\r\nexport default ProductPage;\r\n"],"names":["productState","atom","key","default","ConfirmMessage","_x","_x2","_ConfirmMessage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","title","content","wrap","_context","prev","next","abrupt","Promise","resolve","config","okButtonProps","className","onOk","onCancel","Modal","confirm","stop","MaintenanceProduct","lazy","_useRecoilState","useRecoilState","_useRecoilState2","_slicedToArray","data","setData","_useState","useState","show","action","_useState2","maintenance","setMaintenance","onClikHandle","_onClikHandle","id","old","_objectSpread","undefined","sent","_toConsumableArray","filter","p","onCloseMaintenance","_jsxs","children","Row","gutter","justify","_jsx","Col","span","Button","icon","PlusOutlined","type","onClick","Table","rowKey","columns","dataIndex","render","value","record","index","Typography","Number","toLocaleString","minimumFractionDigits","Image","src","alt","String","height","width","block","HighlightOutlined","danger","DeleteOutlined","dataSource","scroll","x","y","open","exit"],"sourceRoot":""}