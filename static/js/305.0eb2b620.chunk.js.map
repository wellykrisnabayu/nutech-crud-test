{"version":3,"file":"static/js/305.0eb2b620.chunk.js","mappings":"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","sources":["utils/ShowMessage.tsx","components/maintenance-product.component.tsx"],"sourcesContent":["import { Modal, ModalFuncProps } from \"antd\";\r\nimport { ReactNode } from \"react\";\r\ntype TYPE = \"info\" | \"success\" | \"error\" | \"warn\" | \"warning\" | \"confirm\";\r\nexport default async function ShowMessage(\r\n  type: TYPE,\r\n  title: string | ReactNode,\r\n  content: string | ReactNode\r\n) {\r\n  return new Promise((resolve) => {\r\n    const config: ModalFuncProps = {\r\n      type: type,\r\n      title: title,\r\n      content: content,\r\n      okButtonProps: { className: \"bg-purple-500\" },\r\n      onOk: () => {\r\n        resolve(true);\r\n      },\r\n    };\r\n    if (type === \"confirm\") {\r\n      Modal.confirm(config);\r\n    } else if (type === \"error\") {\r\n      Modal.error(config);\r\n    } else if (type === \"info\") {\r\n      Modal.info(config);\r\n    } else if (type === \"success\") {\r\n      Modal.success(config);\r\n    } else if (type === \"warn\" || type === \"warning\") {\r\n      Modal.warning(config);\r\n    }\r\n  });\r\n}\r\n","import {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Modal,\r\n  ModalProps,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { productState } from \"../atoms/productState\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ProductModel } from \"../models/product.model\";\r\nimport ShowMessage from \"../utils/ShowMessage\";\r\nexport type ACTION = \"NEW\" | \"UPDATE\" | \"DELETE\" | \"\";\r\n\r\ninterface maintenanceprops extends ModalProps {\r\n  action: ACTION;\r\n  id?: string;\r\n  exit: () => void;\r\n}\r\nconst formItem = [\"namaBarang\", \"hargaJual\", \"hargaBeli\", \"stock\"] as const;\r\nconst MaintenanceProduct: React.FC<maintenanceprops> = ({\r\n  action,\r\n  id,\r\n  exit,\r\n  ...props\r\n}) => {\r\n  const [data, setData] = useRecoilState(productState);\r\n  const [form] = Form.useForm();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [imageUrl, setImageUrl] = useState<string>();\r\n  useEffect(() => {\r\n    if (action === \"UPDATE\") {\r\n      resetForm();\r\n      setImageUrl(undefined);\r\n      const product = data.find((p) => p.id === id);\r\n      if (product) {\r\n        form.setFieldsValue({\r\n          namaBarang: product.namaBarang,\r\n          hargaJual: product.hargaJual,\r\n          hargaBeli: product.hargaBeli,\r\n          stock: product.stock,\r\n        });\r\n        setImageUrl(product.image);\r\n      }\r\n    }\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action]);\r\n\r\n  async function onOk() {\r\n    if (action === \"NEW\") {\r\n      const valid = await validate();\r\n      if (valid) {\r\n        const { hargaBeli, hargaJual, namaBarang, stock } = getFieldsValue();\r\n        setData((old) => {\r\n          const newData: ProductModel = {\r\n            id: uuidv4(),\r\n            hargaBeli: hargaBeli!,\r\n            hargaJual: hargaJual!,\r\n            namaBarang: namaBarang!,\r\n            stock: Number(stock ?? \"0\"),\r\n            image: imageUrl!,\r\n          };\r\n          return [...old, newData];\r\n        });\r\n        await ShowMessage(\r\n          \"success\",\r\n          \"Berhasil!\",\r\n          \"Berhasil menambahkan produk!\"\r\n        );\r\n        resetForm();\r\n        exit();\r\n      }\r\n    } else if (action === \"UPDATE\") {\r\n      const valid = await validate();\r\n      if (valid) {\r\n        const { hargaBeli, hargaJual, namaBarang, stock } = getFieldsValue();\r\n        setData((old) => {\r\n          const newData: ProductModel = {\r\n            id: id!,\r\n            hargaBeli: hargaBeli!,\r\n            hargaJual: hargaJual!,\r\n            namaBarang: namaBarang!,\r\n            stock: Number(stock ?? \"0\"),\r\n            image: imageUrl!,\r\n          };\r\n          const tmpList = [...old];\r\n          const index = tmpList.findIndex((p) => p.id === id);\r\n          tmpList[index] = newData;\r\n          return [...tmpList];\r\n        });\r\n        await ShowMessage(\"success\", \"Berhasil!\", \"Berhasil mengubah produk!\");\r\n        resetForm();\r\n        exit();\r\n      }\r\n    }\r\n  }\r\n  function getFieldsValue() {\r\n    type tmpType = (typeof formItem)[number];\r\n    const result: { [key in tmpType]?: string } = {};\r\n    for (const item of formItem) {\r\n      result[item] = form.getFieldValue(item);\r\n    }\r\n    return result;\r\n  }\r\n  function resetForm() {\r\n    setImageUrl(undefined);\r\n    form.resetFields([...formItem]);\r\n  }\r\n  async function validate() {\r\n    const { namaBarang, hargaBeli, hargaJual, stock } = getFieldsValue();\r\n    if (!namaBarang || namaBarang === \"\") {\r\n      await ShowMessage(\r\n        \"warning\",\r\n        \"Peringatan!\",\r\n        \"Nama Barang tidak boleh kosong!\"\r\n      );\r\n      return false;\r\n    }\r\n    if (\r\n      isNaN(Number(hargaBeli)) ||\r\n      isNaN(Number(hargaJual)) ||\r\n      isNaN(Number(stock))\r\n    ) {\r\n      await ShowMessage(\r\n        \"warning\",\r\n        \"Peringatan!\",\r\n        \"Harga barang, Harga jual, dan stock harus angka!\"\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  return (\r\n    <Modal\r\n      title={`Maintenance Product - (${action})`}\r\n      {...props}\r\n      okButtonProps={{\r\n        className: \"bg-purple-500\",\r\n      }}\r\n      onCancel={() => {\r\n        resetForm();\r\n        exit();\r\n      }}\r\n      maskClosable={false}\r\n      onOk={onOk}\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{ span: 4 }}\r\n        colon={false}\r\n        labelAlign=\"left\"\r\n        wrapperCol={{ span: 10 }}\r\n        className=\"py-4\"\r\n      >\r\n        <Form.Item label=\"Nama Barang\" name={\"namaBarang\"}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Harga Beli\"\r\n          name={\"hargaBeli\"}\r\n          wrapperCol={{ span: 6 }}\r\n        >\r\n          <InputNumber<string>\r\n            controls={false}\r\n            formatter={(value) =>\r\n              `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n            }\r\n            parser={(value) => value!.replace(/\\$\\s?|(,*)/g, \"\")}\r\n            className=\"w-full\"\r\n            min=\"0\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Harga Jual\"\r\n          name={\"hargaJual\"}\r\n          wrapperCol={{ span: 6 }}\r\n        >\r\n          <InputNumber<string>\r\n            controls={false}\r\n            formatter={(value) =>\r\n              `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n            }\r\n            parser={(value) => value!.replace(/\\$\\s?|(,*)/g, \"\")}\r\n            className=\"w-full\"\r\n            min=\"0\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Stock\" name={\"stock\"} wrapperCol={{ span: 4 }}>\r\n          <InputNumber controls className=\"w-full\" min={0} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Image\" wrapperCol={{ span: 4 }}>\r\n          <Upload\r\n            name=\"avatar\"\r\n            listType=\"picture-card\"\r\n            className=\"avatar-uploader\"\r\n            showUploadList={false}\r\n            accept=\"image/png, image/jpeg\"\r\n            beforeUpload={(file) => {\r\n              let isValid =\r\n                file.type === \"image/png\" || file.type === \"image/jpeg\";\r\n              setImageUrl(undefined);\r\n              if (!isValid) {\r\n                messageApi.error(`${file.name} is not png / jpg file.`);\r\n                return false;\r\n              }\r\n              isValid = file.size <= 100000;\r\n              if (!isValid) {\r\n                messageApi.error(`${file.name} is to large more then 100kb.`);\r\n                return false;\r\n              }\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => {\r\n                setImageUrl(reader.result as string);\r\n              };\r\n              return true;\r\n            }}\r\n            withCredentials={false}\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n      </Form>\r\n      {contextHolder}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst uploadButton = (\r\n  <div>\r\n    {<PlusOutlined />}\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nexport default MaintenanceProduct;\r\n"],"names":["ShowMessage","_x","_x2","_x3","_ShowMessage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","title","content","wrap","_context","prev","next","abrupt","Promise","resolve","config","okButtonProps","className","onOk","Modal","confirm","error","info","success","warning","stop","formItem","uploadButton","_jsxs","children","_jsx","PlusOutlined","style","marginTop","_ref","action","id","exit","props","_objectWithoutProperties","_excluded","_useRecoilState","useRecoilState","productState","_useRecoilState2","_slicedToArray","data","setData","_Form$useForm","Form","useForm","form","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","_useState","useState","_useState2","imageUrl","setImageUrl","_onOk","_getFieldsValue","hargaBeli","hargaJual","namaBarang","stock","_getFieldsValue2","_hargaBeli","_hargaJual","_namaBarang","_stock","validate","sent","getFieldsValue","old","newData","uuidv4","Number","image","concat","_toConsumableArray","resetForm","tmpList","index","findIndex","p","_step","result","_iterator","_createForOfIteratorHelper","s","n","done","item","value","getFieldValue","err","e","f","undefined","resetFields","_validate","_callee2","_getFieldsValue3","_context2","isNaN","useEffect","product","find","setFieldsValue","_objectSpread","onCancel","maskClosable","labelCol","span","colon","labelAlign","wrapperCol","Item","label","name","Input","InputNumber","controls","formatter","replace","parser","min","Upload","listType","showUploadList","accept","beforeUpload","file","isValid","size","reader","FileReader","readAsDataURL","onload","withCredentials","src","alt","width"],"sourceRoot":""}